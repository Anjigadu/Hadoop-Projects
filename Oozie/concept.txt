workflow
- define actions in a DAG(Direct Acyclic Graph) for the data pipeline
- actions program run (program: hive,pig,mapreduce,java, email, ssh, spark)

coordinator
- oozie structure for schedule execution of workflow 
- time trigger
- data trigger

bundles
- coordination of coordinators

oozie
- written in xml
- Oozie is a server-based workflow engine specialized in running workflow jobs with actions that run Hadoop, MapReduce,
  Pig, Hive, Sqoop,Filesystem and shell jobs.
- Oozie is a java web-application that runs in a Java Servlet-container.
- For the purpose of Oozie, a workflow is a collection of actions(ie. Hadoop MapReduce Jobs, Pig Jobs) arranged in
  a control dependency DAG(Direct Acyclic Graph).
  "Control dependency" from one action to another means that the second action can not run 
  until the first action has completed.


hive -f scr.hql

email

java code



# Oozie Simple Flow               ok
Start ----> Map Reduce WordCount ----> End (job)
(job)       ok            | error
                     v
                    kill (control)

# 

http://oozie:11000/
Oozie        ------------->        Hadoop Cluster
                                    workflow / coordinator / bundle

# Oozie Complex Flow
                                    --------> Map Reduce Streaming
Start -----> Map Reduce -----> Fork                                 -----> join
                                    --------> Pig   
                                                                             |
                                                                             v
                             Map Reduce Pipes  <----------               decision
                                       |                                      |
                                          ____________________________________
                                                             |
                                                             v
          End <--------       File System     <-----------  java
          
          
 # Oozie Components:
 (1) Control Flow
     - Start,End,Kill
     - Decision
     - Fork,Join
 (2) Actions
     - MapReduce
     - SPark
     - Java
     - Pig
     - HDFS
     - Hive
     - Sqoop 
     - Shell
     - SSH
     - Email
     
# Oozie Service
 (1) Run HTTP service
     - Clients interact with the service by submitting workflows
     - Workflows are executed immediately or later
 (2) Workflows are defined via XML
     - Instead of writing Java code that implements Tool
     - Interface and extending configured class

# Scheduler
  Oozie executes workflow based on 
  Time Dependency(Frequency)
  Data Dependency
  
  
                 ws api        oozie server             check data availability
  oozie client ---------->    (1) oozie coordinator     -------------------------->   Hadoop
                              (2) oozie workflow
  
   



